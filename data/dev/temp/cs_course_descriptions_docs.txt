[Document(page_content="Many of the world's greatest discoveries and most consequential decisions are enabled or informed by the analysis of data from a myriad of sources. Indeed, the ability to wrangle, visualize, and draw conclusions from data is now a critical tool in the sciences, business, medicine, politics, other academic disciplines, and society as a whole. This course lays the foundations for quantifying relationships in data by exploring complementary computational, statistical, and visualization concepts. These concepts will be reinforced by lab experiences designed to teach programming and statistics skills while analyzing real-world data sets. This course will also examine the broader context and social issues surrounding data analysis, including privacy and ethics.", metadata={'course_prefix': 'CSCI', 'course_number': 104, 'course_title': 'Data Science And Computing For All', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=104&crsid=022117&req_year=0'}), Document(page_content='This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', metadata={'course_prefix': 'CSCI', 'course_number': 134, 'course_title': 'Introduction To Computer Science', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=134&crsid=010801&req_year=0'}), Document(page_content='This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', metadata={'course_prefix': 'CSCI', 'course_number': 136, 'course_title': 'Data Structures And Advanced Programming', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=136&crsid=010803&req_year=0'}), Document(page_content="This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", metadata={'course_prefix': 'CSCI', 'course_number': 237, 'course_title': 'Computer Organization', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=237&crsid=010805&req_year=0'}), Document(page_content='This course investigates methods for designing efficient and reliable algorithms. By carefully analyzing the structure of a problem within a mathematical framework, it is often possible to dramatically decrease the computational resources needed to find a solution. In addition, analysis provides a method for verifying the correctness of an algorithm and accurately estimating its running time and space requirements. We will study several algorithm design strategies that build on data structures and programming techniques introduced in Computer Science 136. These include greedy, divide-and-conquer, dynamic programming, and network flow algorithms. Additional topics of study include algorithms on graphs and strategies for handling potentially intractable problems.', metadata={'course_prefix': 'CSCI', 'course_number': 256, 'course_title': 'Algorithm Design And Analysis', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=256&crsid=010806&req_year=0'}), Document(page_content='This class explores common vulnerabilities in computer systems, how attackers exploit them, and how systems engineers design defenses to mitigate them. The goal is to be able to recognize potential vulnerabilities in one\'s own software and to practice defensive design. Hands-on experience writing assembly language and C code to inspect and modify the low-level operation of running programs is emphasized. Finally, regular reading and writing assignments round out the course to help students understand the cultural and historical background of the computer security "arms race."', metadata={'course_prefix': 'CSCI', 'course_number': 331, 'course_title': 'Introduction To Computer Security', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=331&crsid=020794&req_year=0'}), Document(page_content='This course examines the concepts and structures governing the design and implementation of programming languages. It presents an introduction to the concepts behind compilers and run-time representations of programming languages; features of programming languages supporting abstraction and polymorphism; and the procedural, functional, object-oriented, and concurrent programming paradigms. Programs will be required in languages illustrating each of these paradigms.', metadata={'course_prefix': 'CSCI', 'course_number': 334, 'course_title': 'Principles Of Programming Languages', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=334&crsid=010808&req_year=0'}), Document(page_content='This course is a hands-on exploration of topics in robotics and digital fabrication. We will experience firsthand how ideas and methods from computer science can be applied to make physical objects, including robots and other machines. The emphasis will be on creative, hands-on experimentation. Along the way, students will learn the basics of embedded systems programming (Arduino), breadboarding, soldering, printed circuit board (PCB) design, mechanical computer-aided design (CAD)--both conventional (OnShape) and programmatic (OpenSCAD)--as well digital fabrication (3D-printing, laser cutting). Students will learn both how to build their own prototypes and how to send out designs to have parts machined professionally. Students will work in teams throughout. The course will culminate in a team robotic design competition testing both functionality and creativity.', metadata={'course_prefix': 'CSCI', 'course_number': 345, 'course_title': 'Robotics And Digital Fabrication', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=345&crsid=022328&req_year=0'}), Document(page_content='This course introduces a formal framework for investigating both the computability and complexity of problems. We study several models of computation including finite automata, regular languages, context-free grammars, and Turing machines. These models provide a mathematical basis for the study of computability theory--the examination of what problems can be solved and what problems cannot be solved--and the study of complexity theory--the examination of how efficiently problems can be solved. Topics include the halting problem and the P versus NP problem.', metadata={'course_prefix': 'CSCI', 'course_number': 361, 'course_title': 'Theory Of Computation', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=361&crsid=010814&req_year=0'}), Document(page_content='Machine learning is a field that derives from artificial intelligence and statistics, and is concerned with the design and analysis of computer algorithms that "learn" automatically through the use of data. Computer algorithms are capable of discerning subtle patterns and structure in the data that would be practically impossible for a human to find. As a result, real-world decisions, such as treatment options and loan approvals, are being increasingly automated based on predictions or factual knowledge derived from such algorithms. This course explores topics in supervised learning (e.g., random forests and neural networks), unsupervised learning (e.g., k-means clustering and expectation maximization), and possibly reinforcement learning (e.g., Q-learning and temporal difference learning.) It will also introduce methods for the evaluation of learning algorithms (with an emphasis on analysis of generalizability and robustness of the algorithms to distribution/environmental shift), as well as topics in computational learning theory and ethics.', metadata={'course_prefix': 'CSCI', 'course_number': 374, 'course_title': 'Machine Learning', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=374&crsid=017427&req_year=0'}), Document(page_content='Artificial intelligence (AI) is already transforming society and every industry today. In order to ensure that AI serves the collective needs of humanity, we as computer scientists must guide AI so that it has a positive impact on the human experience. This course is an introduction to harnessing the power of AI so that it benefits people and communities. We will cover a number of general topics such as: agency and initiative, AI and ethics, bias and transparency, confidence and errors, human augmentation and amplification, trust and explainability, and mixed-initiative systems. We explore these topics via readings and projects across the AI spectrum, including: dialog and speech-controlled systems, computer vision, data science, recommender systems, text summarization, and UI personalization, among others.', metadata={'course_prefix': 'CSCI', 'course_number': 378, 'course_title': 'Human Artificial Intelligence Interaction', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=378&crsid=021759&req_year=0'}), Document(page_content='Does X cause Y? If so, how? And what is the strength of this causal relation? Seeking answers to such causal (as opposed to associational) questions is a fundamental human endeavor; the answers we find can be used to support decision-making in various settings such as healthcare and public policy. But how does one tease apart causation from association--early in our statistical education we are taught that "correlation does not imply causation." In this course, we will re-examine this phrase and learn how to reason with confidence about the validity of causal conclusions drawn from messy real-world data. We will cover core topics in causal inference including causal graphical models, unsupervised learning of the structure of these models, expression of causal quantities as functions of observed data, and robust/efficient estimation of these quantities using statistical and machine learning methods. Concepts in the course will be contextualized via regular case studies.', metadata={'course_prefix': 'CSCI', 'course_number': 379, 'course_title': 'Causal Inference', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=379&crsid=021861&req_year=0'}), Document(page_content='This course is an introduction to deep neural networks and how to train them. Beginning with the fundamentals of regression and optimization, the course then surveys a variety of neural network architectures, which may include multilayer feedforward neural networks, convolutional neural networks, recurrent neural networks, and transformer networks. Students will also learn how to use deep learning software such as PyTorch or Tensorflow.', metadata={'course_prefix': 'CSCI', 'course_number': 381, 'course_title': 'Deep Learning', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=381&crsid=022329&req_year=0'}), Document(page_content='Directed independent reading in Computer Science.', metadata={'course_prefix': 'CSCI', 'course_number': 397, 'course_title': 'Independent Reading: Computer Science', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=397&crsid=010819&req_year=0'}), Document(page_content='Directed independent reading in Computer Science.', metadata={'course_prefix': 'CSCI', 'course_number': 398, 'course_title': 'Independent Reading: Computer Science', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=398&crsid=010820&req_year=0'}), Document(page_content='This course explores the design and implementation of computer operating systems. Topics include historical aspects of operating systems development, systems programming, process scheduling, synchronization of concurrent processes, virtual machines, memory management and virtual memory, I/O and file systems, system security, os/architecture interaction, and distributed operating systems.', metadata={'course_prefix': 'CSCI', 'course_number': 432, 'course_title': 'Operating Systems', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=432&crsid=010821&req_year=0'}), Document(page_content='This course provides highly-motivated students an opportunity to work independently with faculty on research topics chosen by individual faculty. Students are generally expected to perform a literature review, identify areas of potential contribution, and explore extensions to existing results. The course culminates in a concise, well-written report describing a problem, its background history, any independent results achieved, and directions for future research.', metadata={'course_prefix': 'CSCI', 'course_number': 493, 'course_title': 'Research In Computer Science', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=493&crsid=010824&req_year=0'}), Document(page_content='Computer Science thesis; this is part of a full-year thesis (493-494).', metadata={'course_prefix': 'CSCI', 'course_number': 494, 'course_title': 'Senior Thesis: Computer Science', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=494&crsid=010825&req_year=0'}), Document(page_content='Directed independent reading in Computer Science.', metadata={'course_prefix': 'CSCI', 'course_number': 497, 'course_title': 'Independent Reading: Computer Science', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=497&crsid=010826&req_year=0'}), Document(page_content='Directed independent reading in Computer Science.', metadata={'course_prefix': 'CSCI', 'course_number': 498, 'course_title': 'Independent Reading: Computer Science', 'source_url': 'https://catalog.williams.edu/CSCI/detail/?strm=&cn=498&crsid=010827&req_year=0'})]